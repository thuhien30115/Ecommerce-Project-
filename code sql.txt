-CÂU1: Query 01: calculate total visit, pageview, transaction for Jan, Feb and March 2017 (order by month)		
SELECT  
  FORMAT_TIMESTAMP("%Y%m",PARSE_TIMESTAMP("%Y%m%d",date)) AS month,
  sum(totals.visits) as visits,
  sum(totals.transactions) as transactions,
  sum(totals.pageviews) as pageviews
 FROM `bigquery-public-data.google_analytics_sample.ga_sessions_2017*` 
 where (_table_suffix between '0101' and '0331')
 group by month;
 --CÂU2:Query 02: Bounce rate per traffic source in July 2017 (Bounce_rate = num_bounce/total_visit) (order by total_visit DESC)			
SELECT
    trafficSource.source as source,
    sum(totals.visits) as total_visits,
    sum(totals.Bounces) as total_no_of_bounces,
    (sum(totals.Bounces)/sum(totals.visits))* 100 as bounce_rate
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`
GROUP BY source
ORDER BY total_visits DESC;

--CÂU3:Query 3: Revenue by traffic source by week, by month in June 2017	
--Hint 1: separate month and week data then union all.					
--Hint 2: at time_type, you can [SELECT 'Month' as time_type] to print time_type column					
--Hint 3: use "productRevenue" to calculate revenue. You need to unnest hits and product to access productRevenue field (example at the end of page).					
--Hint 4: To shorten the result, productRevenue should be divided by 1000000					
	
with month_data as(
SELECT
  "Month" as time_type,
  format_date("%Y%m", parse_date("%Y%m%d", date)) as month,
  trafficSource.source AS source,
  SUM(p.productRevenue)/1000000 AS revenue
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201706*`,
  unnest(hits) hits,
  unnest(product) p
WHERE p.productRevenue is not null
GROUP BY 1,2,3
order by revenue DESC
),

week_data as(
SELECT
  "Week" as time_type,
  format_date("%Y%W", parse_date("%Y%m%d", date)) as date,
  trafficSource.source AS source,
  SUM(p.productRevenue)/1000000 AS revenue
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201706*`,
  unnest(hits) hits,
  unnest(product) p
WHERE p.productRevenue is not null
GROUP BY 1,2,3
order by revenue DESC
)

select * from month_data
union all
select * from week_data;
  --CÂU5:Query 05: Average number of transactions per user that made a purchase in July 2017

select
    format_date("%Y%m",parse_date("%Y%m%d",date)) as month,
    sum(totals.transactions)/count(distinct fullvisitorid) as Avg_total_transactions_per_user
from `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`
    ,unnest (hits) hits,
    unnest(product) product
where  totals.transactions>=1
and totals.totalTransactionRevenue is not null
and product.productRevenue is not null
group by month;

--CAU 6: Query 06: Average amount of money spent per session. Only include purchaser data in July 2017		
--Hint 1: Where clause must be include "totals.transactions IS NOT NULL" and "product.productRevenue is not null"		
--Hint 2: avg_spend_per_session = total revenue/ total visit		
--Hint 3: To shorten the result, productRevenue should be divided by 1000000		
--Notice: per visit is different to per visitor		
  SELECT 
      FORMAT_TIMESTAMP("%Y%m",PARSE_TIMESTAMP("%Y%m%d",date)) AS month,
      sum(productRevenue/1000000)/sum(totals.visits) as avg_revenue_by_user_per_visit,2
    
  from `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`,
    UNNEST (hits) hits,	
    UNNEST (hits.product) product	
    where productRevenue is not null
      and totals.transactions is not null
    group by 1;

--CÂU7:Query 07: Other products purchased by customers who purchased product "YouTube Men's Vintage Henley" in July 2017. Output should show product name and the quantity was ordered.							
--subquery:
select
    product.v2productname as other_purchased_product,
    sum(product.productQuantity) as quantity
from `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`,
    unnest(hits) as hits,
    unnest(hits.product) as product
where fullvisitorid in (select distinct fullvisitorid
                        from `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`,
                        unnest(hits) as hits,
                        unnest(hits.product) as product
                        where product.v2productname = "YouTube Men's Vintage Henley"
                        and product.productRevenue is not null)
and product.v2productname != "YouTube Men's Vintage Henley"
and product.productRevenue is not null
group by other_purchased_product
order by quantity desc;

--CTE:

with buyer_list as(
    SELECT
        distinct fullVisitorId
    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`
    , UNNEST(hits) AS hits
    , UNNEST(hits.product) as product
    WHERE product.v2ProductName = "YouTube Men's Vintage Henley"
    AND totals.transactions>=1
    AND product.productRevenue is not null
)

SELECT
  product.v2ProductName AS other_purchased_products,
  SUM(product.productQuantity) AS quantity
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`
, UNNEST(hits) AS hits
, UNNEST(hits.product) as product
JOIN buyer_list using(fullVisitorId)
WHERE product.v2ProductName != "YouTube Men's Vintage Henley"
 and product.productRevenue is not null
GROUP BY other_purchased_products
ORDER BY quantity DESC;

---CÂU8:"Query 08: Calculate cohort map from product view to addtocart to purchase in Jan, Feb and March 2017. For example, 100% product view then 40% add_to_cart and 10% purchase.

--Add_to_cart_rate = number product  add to cart/number product view. Purchase_rate = number product purchase/number product view. The output should be calculated in product level."				

with b0 as(
    select 
      FORMAT_TIMESTAMP("%Y%m",PARSE_TIMESTAMP("%Y%m%d",date)) AS month,
      count(eCommerceAction.action_type) as num_productview
    FROM	`bigquery-public-data.google_analytics_sample.ga_sessions_2017*`
    cross join UNNEST (hits) 
    WHERE eCommerceAction.action_type = '2'
      and _table_suffix between '0101' and '0331'
    group by month),
 b1 as(
    select 
      FORMAT_TIMESTAMP("%Y%m",PARSE_TIMESTAMP("%Y%m%d",date)) AS month,
      count(eCommerceAction.action_type) as num_add_tocart
    FROM	`bigquery-public-data.google_analytics_sample.ga_sessions_2017*`
    cross join UNNEST (hits) 
    WHERE eCommerceAction.action_type = '3'
      and _table_suffix between '0101' and '0331'
    group by month),
 b2 as(
  select 
      FORMAT_TIMESTAMP("%Y%m",PARSE_TIMESTAMP("%Y%m%d",date)) AS month,
      count(eCommerceAction.action_type) as num_purchase
    FROM	`bigquery-public-data.google_analytics_sample.ga_sessions_2017*`
    cross join UNNEST (hits) 
    cross join UNNEST(product)
    WHERE  eCommerceAction.action_type = '6'
      and _table_suffix between '0101' and '0331'
      and productRevenue is not null
    group by month)

select b0.month, b0.num_productview, b1.num_add_tocart, b2.num_purchase,
        round(100*b1.num_add_tocart/b0.num_productview,2) as add_to_cart_rate,
        round(100*b2.num_purchase/b0.num_productview,2) as purchase_rate
from b0
left join b1 on b0.month = b1.month
left join b2 on b1.month = b2.month
order by month asc;